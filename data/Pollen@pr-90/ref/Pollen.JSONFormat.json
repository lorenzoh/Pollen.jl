{"attributes":{"kind":"struct","backlinks":[{"tag":"sourcefile","title":"Pollen/Pollen.jl","docid":"Pollen@pr-90/src/Pollen.jl"},{"tag":"sourcefile","title":"Pollen/formats/json.jl","docid":"Pollen@pr-90/src/formats/json.jl"},{"tag":"sourcefile","title":"Pollen/serve/events.jl","docid":"Pollen@pr-90/src/serve/events.jl"}],"methods":[{"symbol_id":"Pollen.JSONFormat","module_id":"Pollen","file":"util.jl","line":493,"signature":"(::Signature)"},{"symbol_id":"Pollen.JSONFormat","module_id":"Pollen","file":"formats/json.jl","line":20,"signature":"(::Signature)"}],"package_id":"Pollen@pr-90","title":"JSONFormat","symbol_id":"Pollen.JSONFormat","exported":true,"module_id":"Pollen"},"tag":"documentation","children":[{"attributes":{"symbol":"Pollen.JSONFormat","line":1,"module":"Pollen","file":"formats/json.jl"},"tag":"docstring","children":[{"attributes":{},"tag":"md","children":[{"attributes":{"lang":""},"tag":"codeblock","children":["JSONFormat() <: Format\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Format for reading and writing trees from and to JSON."],"type":"node"},{"attributes":{},"tag":"p","children":["Trees nodes are encoded as JSON objects:"],"type":"node"},{"attributes":{"lang":"julia-repl"},"tag":"codeblock","children":["julia> render(Node(:p, \"Hello\", nothing), JSONFormat()) |> println\n\n{\"attributes\":{},\"tag\":\"p\",\"children\":[\"Hello\", null]}\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Encoding to JSON is lossless only when leaf and attribute values are valid JSON types. Richer leaf values will be converted to a dictionary of MIME type representations to allow serialization and rich display upon deserialization."],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}